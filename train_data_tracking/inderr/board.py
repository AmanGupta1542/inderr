
import time
from .serial_connection import serial_connection, TIME_DELAY
import logging
logger = logging.getLogger("inderr.board")

CHAR_MATRICES = {
    "A" : ['00110000', '01111000', '11001100', '11001100', '11111100', '11001100', '11001100', '00000000'],
    "B" : ['11111100', '01100110', '01100110', '01111100', '01100110', '01100110', '11111100', '00000000'],
    "C" : ['00111100', '01100110', '11000000', '11000000', '11000000', '01100110', '00111100', '00000000'],
    "D" : ['11111000', '01101100', '01100110', '01100110', '01100110', '01101100', '11111000', '00000000'],
    "E" : ['11111110', '01100010', '01101000', '01111000', '01101000', '01100010', '11111110', '00000000'],
    "F" : ['11111110', '01100010', '01101000', '01111000', '01101000', '01100000', '11110000', '00000000'],
    "G" : ['00111100', '01100110', '11000000', '11000000', '11001110', '01100110', '00111110', '00000000'],
    "H" : ['11001100', '11001100', '11001100', '11111100', '11001100', '11001100', '11001100', '00000000'],
    "I" : ['01111000', '00110000', '00110000', '00110000', '00110000', '00110000', '01111000', '00000000'],
    "J" : ['00011110', '00001100', '00001100', '00001100', '11001100', '11001100', '01111000', '00000000'],
    "K" : ['11110110', '01100110', '01101100', '01111000', '01101100', '01100110', '11110110', '00000000'],
    "L" : ['11110000', '01100000', '01100000', '01100000', '01100010', '01100110', '11111110', '00000000'],
    "M" : ['11000110', '11101110', '11111110', '11111110', '11010110', '11000110', '11000110', '00000000'],
    "N" : ['11000110', '11100110', '11110110', '11011110', '11001110', '11000110', '11000110', '00000000'],
    "O" : ['00111000', '01101100', '11000110', '11000110', '11000110', '01101100', '00111000', '00000000'],
    "P" : ['11111100', '01100110', '01100110', '01111100', '01100000', '01100000', '11110000', '00000000'],
    "Q" : ['01111000', '11001100', '11001100', '11001100', '11011100', '01111000', '00011100', '00000000'],
    "R" : ['11111100', '01100110', '01100110', '01111100', '01101100', '01100110', '11110110', '00000000'],
    "S" : ['01111000', '11001100', '11100000', '01110000', '00011100', '11001100', '01111000', '00000000'],
    "T" : ['11111100', '10110100', '00110000', '00110000', '00110000', '00110000', '01111000', '00000000'],
    "U" : ['11001100', '11001100', '11001100', '11001100', '11001100', '11001100', '11111100', '00000000'],
    "V" : ['11001100', '11001100', '11001100', '11001100', '11001100', '01111000', '00110000', '00000000'],
    "W" : ['11000110', '11000110', '11000110', '11010110', '11111110', '11101110', '11000110', '00000000'],
    "X" : ['11000110', '11000110', '01101100', '00111000', '00111000', '01101100', '11000110', '00000000'],
    "Y" : ['11001100', '11001100', '11001100', '01111000', '00110000', '00110000', '01111000', '00000000'],
    "Z" : ['11111110', '11000110', '10001100', '00011000', '00110010', '01100110', '11111110', '00000000'],

    "a" : ['00000000', '00000000', '01111000', '00001100', '01111100', '11001100', '01110110', '00000000'],
    "b" : ['11100000', '01100000', '01100000', '01111100', '01100110', '01100110', '11011100', '00000000'],
    "c" : ['00000000', '00000000', '01111000', '11001100', '11000000', '11001100', '01111000', '00000000'],
    "d" : ['00011100', '00001100', '00001100', '01111100', '11001100', '11001100', '01110110', '00000000'],
    "e" : ['00000000', '00000000', '01111000', '11001100', '11111100', '11000000', '01111000', '00000000'],
    "f" : ['00111000', '01101100', '01100000', '11110000', '01100000', '01100000', '11110000', '00000000'],
    "g" : ['00000000', '00000000', '01110110', '11001100', '11001100', '01111100', '00001100', '11111000'],
    "h" : ['11100000', '01100000', '01101100', '01110110', '01100110', '01100110', '11100110', '00000000'],
    "i" : ['00110000', '00000000', '01110000', '00110000', '00110000', '00110000', '01111000', '00000000'],
    "j" : ['00001100', '00000000', '00001100', '00001100', '00001100', '11001100', '11001100', '01111000'],
    "k" : ['11100000', '01100000', '01100110', '01101100', '01111000', '01101100', '11100110', '00000000'],
    "l" : ['01110000', '00110000', '00110000', '00110000', '00110000', '00110000', '01111000', '00000000'],
    "m" : ['00000000', '00000000', '11001100', '11111110', '11111110', '11010110', '11000110', '00000000'],
    "n" : ['00000000', '00000000', '11111000', '11001100', '11001100', '11001100', '11001100', '00000000'],
    "o" : ['00000000', '00000000', '01111000', '11001100', '11001100', '11001100', '01111000', '00000000'],
    "p" : ['00000000', '00000000', '11011100', '01100110', '01100110', '01111100', '01100000', '11110000'],
    "q" : ['00000000', '00000000', '01110110', '11001100', '11001100', '01111100', '00001100', '00011110'],
    "r" : ['00000000', '00000000', '10011100', '01110110', '01100110', '01100000', '11110000', '00000000'],
    "s" : ['00000000', '00000000', '01111100', '11000000', '01111000', '00001100', '11111000', '00000000'],
    "t" : ['00010000', '00110000', '01111100', '00110000', '00110000', '00110100', '00011000', '00000000'],
    "u" : ['00000000', '00000000', '11001100', '11001100', '11001100', '11001100', '01110110', '00000000'],
    "v" : ['00000000', '00000000', '11001100', '11001100', '11001100', '01111000', '00110000', '00000000'],
    "w" : ['00000000', '00000000', '11000110', '11000110', '11010110', '11111110', '01101100', '00000000'],
    "x" : ['00000000', '00000000', '11000110', '01101100', '00111000', '01101100', '11000110', '00000000'],
    "y" : ['00000000', '00000000', '11001100', '11001100', '11001100', '01111100', '00001100', '11111000'],
    "z" : ['00000000', '00000000', '11111100', '10011000', '00110000', '01100100', '11111100', '00000000'],

    "0" : ['01111000', '11001100', '11011100', '11111100', '11101100', '11001100', '01111100', '00000000'],
    "1" : ['00110000', '01110000', '00110000', '00110000', '00110000', '00110000', '11111100', '00000000'],
    "2" : ['01111000', '11001100', '00001100', '00111000', '01100000', '11001100', '11111100', '00000000'],
    "3" : ['01111000', '11001100', '00001100', '00111000', '00001100', '11001100', '01111000', '00000000'],
    "4" : ['00011100', '00111100', '01101100', '11001100', '11111110', '00001100', '00011110', '00000000'],
    "5" : ['11111100', '11000000', '11111000', '00001100', '00001100', '11001100', '01111000', '00000000'],
    "6" : ['00111000', '01100000', '11000000', '11111000', '11001100', '11001100', '01111000', '00000000'],
    "7" : ['11111100', '11001100', '00001100', '00011000', '00110000', '00110000', '00110000', '00000000'],
    "8" : ['01111000', '11001100', '11001100', '01111000', '11001100', '11001100', '01111000', '00000000'],
    "9" : ['01111000', '11001100', '11001100', '01111100', '00001100', '00011000', '01110000', '00000000'],

    "!" : ['00110000', '01111000', '01111000', '00110000', '00110000', '00000000', '00110000', '00000000'],
    "#" : ['01101100', '01101100', '11111110', '01101100', '11111110', '01101100', '01101100', '00000000'],
    "$" : ['00110000', '01111100', '11000000', '01111000', '00001100', '11111000', '00110000', '00000000'],
    "%" : ['00000000', '11000110', '11001100', '00011000', '00110000', '01100110', '11000110', '00000000'],
    "&" : ['00111000', '01101100', '00111000', '01110110', '11011100', '11001100', '01110110', '00000000'],
    "?" : ['01111000', '11001100', '00001100', '00011000', '00110000', '00000000', '00110000', '00000000'],
    "-" : ['0000001001000000','0000010110100000','0000100000010000','0001000000001000','0010000000000100','0100000000000010','0100000000000010','0111111111111110','0100000000000010','0100000000000010','0100000000000010','0100000000000010','0010000000000100','0001000000001000','0000100000010000','0000010110100000'],
    "+" : ['0000111100000000', '0000111100000000', '0011111111000000', '0011111111000000', '1111000011110000', '1111000011110000', '1111000011110000', '1111000011110000', '1111111111110000', '1111111111110000', '1111000011110000', '1111000011110000', '1111000011110000', '1111000011110000', '1111000011110000', '1111000011110000'],
    "=" : ['1111100000000000','1111110000000000','1100111000000000','1100111100000000','1100111100000000','1100111100000000','1100111100000000','1111111000000000','1111111000000000','1111111000000000','1100111100000000','1100111100000000','1100111100000000','1100111100000000','1100111000000000','1111111000000000']
    # " " : ['00000000']
}

CHAR_MATRICES = {  
    "A" : 
            [
                '0001100000000000',
                '0011110000000000',
                '0111111000000000',
                '1110011100000000',
                '1100001100000000',
                '1100001100000000',
                '1100001100000000',
                '1100001100000000',
                '1111111100000000',
                '1111111100000000',
                '1100001100000000',
                '1100001100000000',
                '1100001100000000',
                '1100001100000000',
                '1100001100000000',
                '1100001100000000'
            ],
    "B" :   
            [
                '1111111100000000',
                '1111111110000000',
                '1100000011000000',
                '1100000011000000',
                '1100000011000000',
                '1100000011000000',
                '1100000011000000',
                '1111111111000000',
                '1111111110000000',
                '1111111111000000',
                '1100000111000000',
                '1100000011000000',
                '1100000011000000',
                '1100000011000000',
                '1111111111000000',
                '1111111110000000'
            ],


    "C" :
            [
                '0000111111110000',
                '0001111111111000',
                '0011100000011100',
                '0111000000011100',
                '1110000000000000',
                '1110000000000000',
                '1110000000000000',
                '1110000000000000',
                '1110000000000000',
                '1110000000000000',
                '1110000000000000',
                '1110000000000000',
                '0111000000011100',
                '0011100000011100',
                '0001111111111000',
                '0000111111110000'
            ],        

    "D"    :
            [
                '1111111110000000',
                '1111111111000000',
                '1100000001100000',
                '1100000000110000',
                '1100000000110000',
                '1100000000110000',
                '1100000000110000',
                '1100000000110000',
                '1100000000110000',
                '1100000000110000',
                '1100000000110000',
                '1100000000110000',
                '1100000000110000',
                '1100000001100000',
                '1111111111000000',
                '1111111110000000',
            ],    

    "E" :
            [
                '1111111101100000',
                '1111111111100000',
                '1100000001100000',
                '1100000000000000',
                '1100000000000000',
                '1100000000000000',
                '1100001000000000',
                '1111111000000000',
                '1111111000000000',
                '1111111000000000',
                '1100001000000000',
                '1100000000000000',
                '1100000000000000',
                '1100000001100000',
                '1111111111100000',
                '1111111101100000'
            ],            

    "F" :
            [
                '1111111111100000',
                '1111111111100000',
                '1100000000000000',
                '1100000000000000',
                '1100000000000000',
                '1100000000000000',
                '1100000000000000',
                '1111111100000000',
                '1111111100000000',
                '1111111100000000',
                '1100000000000000',
                '1100000000000000',
                '1100000000000000',
                '1100000000000000',
                '1100000000000000',
                '1100000000000000'
            ],

    "G" :
            [
                '0000111111111000',
                '0001111111111100',
                '0011100000001110',
                '0111000000000000',
                '1110000000000000',
                '1110000000000000',
                '1110000000000000',
                '1110000000000000',
                '1110000000000000',
                '1110000000000000',
                '1110000001111110',
                '1110000001101110',
                '0111000001101110',
                '0011111111101110',
                '0001111111101110',
                '0000111111001110'
            ],


    "H" :
             [
                '1100000000110000',
                '1100000000110000',
                '1100000000110000',
                '1100000000110000',
                '1100000000110000',
                '1100000000110000',
                '1100000000110000',
                '1111111111110000',
                '1111111111110000',
                '1100000000110000',
                '1100000000110000',
                '1100000000110000',
                '1100000000110000',
                '1100000000110000',
                '1100000000110000',
                '1100000000110000'
             ],
    "I" :
            [
                '1111111100000000',
                '1111111100000000',
                '0001100000000000',
                '0001100000000000',
                '0001100000000000',
                '0001100000000000',
                '0001100000000000',
                '0001100000000000',
                '0001100000000000',
                '0001100000000000',
                '0001100000000000',
                '0001100000000000',
                '0001100000000000',
                '0001100000000000',
                '1111111100000000',
                '1111111100000000',
            ],
    "J" :
            [
                '0001111111111110',
                '0001111111111110',
                '0001100000001100',
                '0000000000001100',
                '0000000000001100',
                '0000000000001100',
                '0000000000001100',
                '0000000000001100',
                '0000000000001100',
                '0000000000001100',
                '0000000000001100',
                '0110000000001100',
                '0110000000001100',
                '0111000000011100',
                '0011111111111000',
                '0001111111110000'
            ],        
    "K" :
            [
                '1110000000111000',
                '1110000001110000',
                '1110000011100000',
                '1110000111000000',
                '1110001110000000',
                '1110011100000000',
                '1110111000000000',
                '1111110000000000',
                '1111110000000000',
                '1111111000000000',
                '1110011100000000',
                '1110001110000000',
                '1110000111000000',
                '1110000011100000',
                '1110000001110000',
                '1110000000111000'
            ],
    "L" :
            [
                '1100000000000000',
                '1100000000000000',
                '1100000000000000',
                '1100000000000000',
                '1100000000000000',
                '1100000000000000',
                '1100000000000000',
                '1100000000000000',
                '1100000000000000',
                '1100000000000000',
                '1100000000000000',
                '1100000000000000',
                '1100000000000000',
                '1100000000000000',
                '1111111100000000',
                '1111111100000000',
            ],     

    "M" :
            [
                '1100000000011000',
                '1110000000111000',
                '1111000001111000',
                '1111100011111000',
                '1101111111011000',
                '1100111110011000',
                '1100011100011000',
                '1100001000011000',
                '1100000000011000',
                '1100000000011000',
                '1100000000011000',
                '1100000000011000',
                '1100000000011000',
                '1100000000011000',
                '1100000000011000',
                '1100000000011000'
            ],          
    "N" :
            [
                '0100000000000110',
                '0110000000000110',
                '0111000000000110',
                '0111100000000110',
                '0111110000000110',
                '0110111000000110',
                '0110011100000110',
                '0110001110000110',
                '0110000111000110',
                '0110000011100110',
                '0110000001110110',
                '0110000000111110',
                '0110000000011110',
                '0110000000001110',
                '0110000000000110',
                '0110000000000010'
            ],
    "O" :
            [
                '0000011100000000',
                '0000111110000000',
                '0001100011000000',
                '0011000001100000',
                '0011000001100000',
                '0011000001100000',
                '0011000001100000',
                '0011000001100000',
                '0011000001100000',
                '0011000001100000',
                '0011000001100000',
                '0011000001100000',
                '0011000001100000',
                '0001100011000000',
                '0000111110000000',
                '0000011100000000'
            ],        
    "P" :
            [
                '0111111111100000',
                '0011111111110000',
                '0011000000111000',
                '0011000000011100',
                '0011000000011100',
                '0011000000011100',
                '0011000000111100',
                '0011111111111000',
                '0011111111110000',
                '0011000000000000',
                '0011000000000000',
                '0011000000000000',
                '0011000000000000',
                '0011000000000000',
                '0011000000000000',
                '0111100000000000'
            ],
    "Q" :   
            [
                '0000001110000000',
                '0000011111000000',
                '0000110001100000',
                '0001100000110000',
                '0001100000110000',
                '0001100000110000',
                '0001100000110000',
                '0001100000110000',
                '0001100000110000',
                '0001100000110000',
                '0001100001110000',
                '0001100010010000',
                '0001100010110000',
                '0000110011100011',
                '0000011011111110',
                '0000001110011100'
            ],
    "R" :
            [
                '1111111111100000',
                '0111111111110000',
                '0111000000011000',
                '0110000000011000',
                '0110000000011000',
                '0110000000110000',
                '0110000001110000',
                '0111111111100000',
                '0111111111100000',
                '0110000001110000',
                '0110000000111000',
                '0110000000011100',
                '0110000000001110',
                '0110000000000111',
                '0110000000000011',
                '1111100000000001'
            ],        
    "S" :
            [
                '0001111111111000',
                '0011111111111100',
                '0111100000011100',
                '0111000000011110',
                '0111000000000000',
                '0111000000000000',
                '0111000000000000',
                '0111111111111000',
                '0011111111111100',
                '0000000000011110',
                '0000000000001110',
                '1100000000001110',
                '1110000000001110',
                '0111000000011110',
                '0111111111111100',
                '0011111111111000'
            ],     

    "T" :
            [
                '0111111111100000',
                '0111111111100000',
                '0000011000000000',
                '0000011000000000',
                '0000011000000000',
                '0000011000000000',
                '0000011000000000',
                '0000011000000000',
                '0000011000000000',
                '0000011000000000',
                '0000011000000000',
                '0000011000000000',
                '0000011000000000',
                '0000011000000000',
                '0000011000000000',
                '000001100000000'
            ],        
    "U" :
            [
                '0110000000001100',
                '0110000000001100',
                '0110000000001100',
                '0110000000001100',
                '0110000000001100',
                '0110000000001100',
                '0110000000001100',
                '0110000000001100',
                '0110000000001100',
                '0110000000001100',
                '0110000000001100',
                '0110000000001100',
                '0011000000011000',
                '0001100000110000',
                '0000111111100000',
                '0000011111000000'
            ],       


    "U":
            [
                '1100001100000000',
                '1100001100000000',
                '1100001100000000',
                '1100001100000000',
                '1100001100000000',
                '1100001100000000',
                '1100001100000000',
                '1100001100000000',
                '1100001100000000',
                '1100001100000000',
                '1100001100000000',
                '1100001100000000',
                '1100001100000000',
                '1100001100000000',
                '1111111100000000',
                '0111111000000000',
            ],



    "V" :
            [
                '0111000000011100',
                '0111000000011100',
                '0111000000011100',
                '0111000000011100',
                '0111000000011100',
                '0111000000011100',
                '0111000000011100',
                '0111000000011100',
                '0111000000011100',
                '0111000000011100',
                '0111100000111100',
                '0011110001111000',
                '0001111011110000',
                '0000111111100000',
                '0000011111000000',
                '0000001110000000'              
            ],        
    "W" :   
            [
                '1100000000000011',
                '1100000000000011',
                '1100000000000011',
                '1100000000000011',
                '1100000000000011',
                '1100000000000011',
                '1100000000000011',
                '1100000110000011',
                '1100001111000011',
                '1100001111000011',
                '1100011001100011',
                '1100110000110011',
                '1101100000011011',
                '1111000000001111',
                '1110000000000111',
                '1100000000000011'
            ],

    "X" :
            [
                '1000000000000011',
                '1100000000000110',
                '0110000000001100',          
                '0011000000011000',
                '0001100000110000',
                '0000110001100000',
                '0000011011000000',
                '0000001110000000',
                '0000001110000000',
                '0000011011000000',
                '0000110001100000',
                '0001100000110000',
                '0011000000011000',
                '0110000000001100',
                '1100000000000110',
                '1000000000000011'                       
            ],    

    "Y" :
            [
                '1000000000000001',
                '1100000000000011',
                '1110000000000111',
                '0111000000001110',
                '0011100000011100',
                '0001110000111000',
                '0000111001110000',
                '0000011111100000',
                '0000001111000000',
                '0000001110000000',
                '0000001110000000',
                '0000001110000000',
                '0000001110000000',
                '0000001110000000',
                '0000001110000000',
                '0000011111000000'
            ],            
    "Z" :  
            [
                '1111111111111111',
                '1111111111111111',
                '0000000000001110',
                '0000000000011100',
                '0000000000111000',
                '0000000001110000',
                '0000000011100000',
                '0000000111000000',
                '0000001110000000',
                '0000011100000000',
                '0000111000000000',
                '0001110000000000',
                '0011100000000000',
                '0111000000000000',
                '1111111111111111',
                '1111111111111111'
            ],   
    "-" :  
            [
                '0000000000000000',
                '0000000000000000',
                '0000000000000000',
                '0000000000000000',
                '0000000000000000',
                '0000000000000000',
                '0000000000000000',
                '0011110000000000',
                '0011110000000000',
                '0000000000000000',
                '0000000000000000',
                '0000000000000000',
                '0000000000000000',
                '0000000000000000',
                '0000000000000000',
                '0000000000000000'
            ],   
    "," :  
            [
                '0000000000000000',
                '0000000000000000',
                '0000000000000000',
                '0000000000000000',
                '0000000000000000',
                '0000000000000000',
                '0000000000000000',
                '0000000000000000',
                '0000000000000000',
                '0000000000000000',
                '0000000000000000',
                '0000000000000000',
                '0000110000000000',
                '0000110000000000',
                '0011000000000000',
                '1100000000000000'
            ],        

}
a = {
# CHAR_MATRICES = {
    #   /*   (32) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  
    #   /* ! (33) */ {0x00, 0x00, 0x00, 0x18, 0x3C, 0x3C, 0x3C, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00},
    #   /* " (34) */ {0x00, 0x00, 0x66, 0x66, 0x66, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    #   /* # (35) */ {0x00, 0x00, 0x00, 0x00, 0x6C, 0x6C, 0xFE, 0x6C, 0x6C, 0x6C, 0xFE, 0x6C, 0x6C, 0x00, 0x00, 0x00},
    #   /* $ (36) */ {0x00, 0x18, 0x18, 0x7C, 0xC6, 0xC2, 0xC0, 0x7C, 0x06, 0x06, 0x86, 0xC6, 0x7C, 0x18, 0x18, 0x00},    
    #   /* % (37) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0xC2, 0xC6, 0x0C, 0x18, 0x30, 0x60, 0xC6, 0x86, 0x00, 0x00, 0x00},
    #   /* & (38) */ {0x00, 0x00, 0x00, 0x38, 0x6C, 0x6C, 0x38, 0x76, 0xDC, 0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00},
    #   /* ' (39) */ {0x00, 0x00, 0x30, 0x30, 0x30, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    #   /* ( (40) */ {0x00, 0x00, 0x00, 0x0C, 0x18, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x18, 0x0C, 0x00, 0x00, 0x00},
    #   /* ) (41) */ {0x00, 0x00, 0x00, 0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x18, 0x30, 0x00, 0x00, 0x00},
    #   /* * (42) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00},
    #   /* + (43) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00},
    #   /* , (44) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x30, 0x00, 0x00},
    #   /* - (45) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    #   /* . (46) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00},
    #   /* / (47) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0, 0x80, 0x00, 0x00, 0x00},
    #   /* 0 (48) */ {0x00, 0x00, 0x00, 0x3C, 0x66, 0xC3, 0xC3, 0xDB, 0xDB, 0xC3, 0xC3, 0x66, 0x3C, 0x00, 0x00, 0x00},
    #   /* 1 (49) */ {0x00, 0x00, 0x00, 0x18, 0x38, 0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7E, 0x00, 0x00, 0x00},
    #   /* 2 (50) */ {0x00, 0x00, 0x00, 0x7C, 0xC6, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0, 0xC6, 0xFE, 0x00, 0x00, 0x00},
    #   /* 3 (51) */ {0x00, 0x00, 0x00, 0x7C, 0xC6, 0x06, 0x06, 0x3C, 0x06, 0x06, 0x06, 0xC6, 0x7C, 0x00, 0x00, 0x00},
    #   /* 4 (52) */ {0x00, 0x00, 0x00, 0x0C, 0x1C, 0x3C, 0x6C, 0xCC, 0xFE, 0x0C, 0x0C, 0x0C, 0x1E, 0x00, 0x00, 0x00},
    #   /* 5 (53) */ {0x00, 0x00, 0x00, 0xFE, 0xC0, 0xC0, 0xC0, 0xFC, 0x06, 0x06, 0x06, 0xC6, 0x7C, 0x00, 0x00, 0x00},
    #   /* 6 (54) */ {0x00, 0x00, 0x00, 0x38, 0x60, 0xC0, 0xC0, 0xFC, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00},
    #   /* 7 (55) */ {0x00, 0x00, 0x00, 0xFE, 0xC6, 0x06, 0x06, 0x0C, 0x18, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, 0x00},
    #   /* 8 (56) */ {0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00},
    #   /* 9 (57) */ {0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0x7E, 0x06, 0x06, 0x06, 0x0C, 0x78, 0x00, 0x00, 0x00},
    #   /* : (58) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00},
    #   /* ; (59) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18, 0x30, 0x00, 0x00, 0x00},
    #   /* < (60) */ {0x00, 0x00, 0x00, 0x00, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x00, 0x00, 0x00},
    #   /* = (61) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    #   /* > (62) */ {0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x00, 0x00, 0x00},
    #   /* ? (63) */ {0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC6, 0x0C, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00},
    #   /* @ (64) */ {0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xDE, 0xDE, 0xDE, 0xDC, 0xC0, 0x7C, 0x00, 0x00, 0x00},
    #   /* A (65) */ {0x00, 0x00, 0x00, 0x10, 0x38, 0x6C, 0xC6, 0xC6, 0xFE, 0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00},
    #   /* B (66) */ {0x00, 0x00, 0x00, 0xFC, 0x66, 0x66, 0x66, 0x7C, 0x66, 0x66, 0x66, 0x66, 0xFC, 0x00, 0x00, 0x00},
    #   /* C (67) */ {0x00, 0x00, 0x00, 0x3C, 0x66, 0xC2, 0xC0, 0xC0, 0xC0, 0xC0, 0xC2, 0x66, 0x3C, 0x00, 0x00, 0x00},
    #   /* D (68) */ {0x00, 0x00, 0x00, 0xF8, 0x6C, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x6C, 0xF8, 0x00, 0x00, 0x00},
    #   /* E (69) */ {0x00, 0x00, 0x00, 0xFE, 0x66, 0x62, 0x68, 0x78, 0x68, 0x60, 0x62, 0x66, 0xFE, 0x00, 0x00, 0x00},
    #   /* F (70) */ {0x00, 0x00, 0x00, 0xFE, 0x66, 0x62, 0x68, 0x78, 0x68, 0x60, 0x60, 0x60, 0xF0, 0x00, 0x00, 0x00},
    #   /* G (71) */ {0x00, 0x00, 0x00, 0x3C, 0x66, 0xC2, 0xC0, 0xC0, 0xDE, 0xC6, 0xC6, 0x66, 0x3A, 0x00, 0x00, 0x00},
    #   /* H (72) */ {0x00, 0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xFE, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00},
    #   /* I (73) */ {0x00, 0x00, 0x00, 0x3C, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00},
    #   /* J (74) */ {0x00, 0x00, 0x00, 0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0xCC, 0xCC, 0xCC, 0x78, 0x00, 0x00, 0x00},
    #   /* K (75) */ {0x00, 0x00, 0x00, 0xE6, 0x66, 0x66, 0x6C, 0x78, 0x78, 0x6C, 0x66, 0x66, 0xE6, 0x00, 0x00, 0x00},
    #   /* L (76) */ {0x00, 0x00, 0x00, 0xF0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x62, 0x66, 0xFE, 0x00, 0x00, 0x00},
    #   /* M (77) */ {0x00, 0x00, 0x00, 0xC3, 0xE7, 0xFF, 0xFF, 0xDB, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x00, 0x00, 0x00},
    #   /* N (78) */ {0x00, 0x00, 0x00, 0xC6, 0xE6, 0xF6, 0xFE, 0xDE, 0xCE, 0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00},
    #   /* O (79) */ {0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00},
    #   /* P (80) */ {0x00, 0x00, 0x00, 0xFC, 0x66, 0x66, 0x66, 0x7C, 0x60, 0x60, 0x60, 0x60, 0xF0, 0x00, 0x00, 0x00},
    #   /* Q (81) */ {0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xD6, 0xDE, 0x7C, 0x0C, 0x0E, 0x00},
    #   /* R (82) */ {0x00, 0x00, 0x00, 0xFC, 0x66, 0x66, 0x66, 0x7C, 0x6C, 0x66, 0x66, 0x66, 0xE6, 0x00, 0x00, 0x00},
    #   /* S (83) */ {0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC6, 0x60, 0x38, 0x0C, 0x06, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00},
    #   /* T (84) */ {0x00, 0x00, 0x00, 0xFF, 0xDB, 0x99, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00},
    #   /* U (85) */ {0x00, 0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00},
    #   /* V (86) */ {0x00, 0x00, 0x00, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x66, 0x3C, 0x18, 0x00, 0x00, 0x00},
    #   /* W (87) */ {0x00, 0x00, 0x00, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xDB, 0xDB, 0xFF, 0x66, 0x66, 0x00, 0x00, 0x00},
    #   /* X (88) */ {0x00, 0x00, 0x00, 0xC3, 0xC3, 0x66, 0x3C, 0x18, 0x18, 0x3C, 0x66, 0xC3, 0xC3, 0x00, 0x00, 0x00},
    #   /* Y (89) */ {0x00, 0x00, 0x00, 0xC3, 0xC3, 0xC3, 0x66, 0x3C, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00},
    #   /* Z (90) */ {0x00, 0x00, 0x00, 0xFF, 0xC3, 0x86, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0xC3, 0xFF, 0x00, 0x00, 0x00},
    #   /* [ (91) */ {0x00, 0x00, 0x00, 0x3C, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3C, 0x00, 0x00, 0x00},
    #   /* \ (92) */ {0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0x70, 0x38, 0x1C, 0x0E, 0x06, 0x02, 0x00, 0x00, 0x00},
    #   /* ] (93) */ {0x00, 0x00, 0x00, 0x3C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x3C, 0x00, 0x00, 0x00},
    #   /* ^ (94) */ {0x00, 0x10, 0x38, 0x6C, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    #   /* _ (95) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00},
    #   /* ` (96) */ {0x00, 0x30, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    #   /* a (97) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00},
    #   /* b (98) */ {0x00, 0x00, 0x00, 0xE0, 0x60, 0x60, 0x78, 0x6C, 0x66, 0x66, 0x66, 0x66, 0x7C, 0x00, 0x00, 0x00},
    #   /* c (99) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC0, 0xC0, 0xC0, 0xC6, 0x7C, 0x00, 0x00, 0x00},
    #   /* d (100) */ {0x00, 0x00, 0x00, 0x1C, 0x0C, 0x0C, 0x3C, 0x6C, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00},
    #   /* e (101) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xFE, 0xC0, 0xC0, 0xC6, 0x7C, 0x00, 0x00, 0x00},
    #   /* f (102) */ {0x00, 0x00, 0x00, 0x38, 0x6C, 0x64, 0x60, 0xF0, 0x60, 0x60, 0x60, 0x60, 0xF0, 0x00, 0x00, 0x00},
    #   /* g (103) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x7C, 0x0C, 0xCC, 0x78},
    #   /* h (104) */ {0x00, 0x00, 0x00, 0xE0, 0x60, 0x60, 0x6C, 0x76, 0x66, 0x66, 0x66, 0x66, 0xE6, 0x00, 0x00, 0x00},
    #   /* i (105) */ {0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00},
    #   /* j (106) */ {0x00, 0x00, 0x00, 0x06, 0x06, 0x00, 0x0E, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x66, 0x66, 0x3C},
    #   /* k (107) */ {0x00, 0x00, 0x00, 0xE0, 0x60, 0x60, 0x66, 0x6C, 0x78, 0x78, 0x6C, 0x66, 0xE6, 0x00, 0x00, 0x00},
    #   /* l (108) */ {0x00, 0x00, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00},
    #   /* m (109) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE6, 0xFF, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0x00, 0x00, 0x00},
    #   /* n (110) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00},
    #   /* o (111) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00},
    #   /* p (112) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x66, 0x66, 0x66, 0x66, 0x66, 0x7C, 0x60, 0x60, 0xF0},
    #   /* q (113) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x7C, 0x0C, 0x0C, 0x1E},
    #   /* r (114) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x76, 0x66, 0x60, 0x60, 0x60, 0xF0, 0x00, 0x00, 0x00},
    #   /* s (115) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0x60, 0x38, 0x0C, 0xC6, 0x7C, 0x00, 0x00, 0x00},
    #   /* t (116) */ {0x00, 0x00, 0x00, 0x10, 0x30, 0x30, 0xFC, 0x30, 0x30, 0x30, 0x30, 0x36, 0x1C, 0x00, 0x00, 0x00},
    #   /* u (117) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00},
    #   /* v (118) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0xC3, 0xC3, 0xC3, 0x66, 0x3C, 0x18, 0x00, 0x00, 0x00},
    #   /* w (119) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0xC3, 0xC3, 0xDB, 0xDB, 0xFF, 0x66, 0x00, 0x00, 0x00},
    #   /* x (120) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0x66, 0x3C, 0x18, 0x3C, 0x66, 0xC3, 0x00, 0x00, 0x00},
    #   /* y (121) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7E, 0x06, 0x0C, 0xF8},
    #   /* z (122) */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xCC, 0x18, 0x30, 0x60, 0xC6, 0xFE, 0x00, 0x00, 0x00},
    #   /* { (123) */ {0x00, 0x00, 0x00, 0x0E, 0x18, 0x18, 0x18, 0x70, 0x18, 0x18, 0x18, 0x18, 0x0E, 0x00, 0x00, 0x00},
    #   /* | (124) */ {0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00},
    #   /* } (125) */ {0x00, 0x00, 0x00, 0x70, 0x18, 0x18, 0x18, 0x0E, 0x18, 0x18, 0x18, 0x18, 0x70, 0x00, 0x00, 0x00},
    #   /* ~ (126) */ {0x00, 0x00, 0x00, 0x76, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    #   /* BLK(127)*/ {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF},
    # }
}

CHAR_MATRICES = {
  '1': [
    '00000000',
    '00000000',
    '00000000',
    '00011000',
    '00111000',
    '01111000',
    '00011000',
    '00011000',
    '00011000',
    '00011000',
    '00011000',
    '00011000',
    '01111110',
    '00000000',
    '00000000',
    '00000000'
  ],
  '2': [
    '00000000',
    '00000000',
    '00000000',
    '01111100',
    '11000110',
    '00000110',
    '00001100',
    '00011000',
    '00110000',
    '01100000',
    '11000000',
    '11000110',
    '11111110',
    '00000000',
    '00000000',
    '00000000'
  ],
  '3': [
    '00000000',
    '00000000',
    '00000000',
    '01111100',
    '11000110',
    '00000110',
    '00000110',
    '00111100',
    '00000110',
    '00000110',
    '00000110',
    '11000110',
    '01111100',
    '00000000',
    '00000000',
    '00000000'
  ],
  '4': [
    '00000000',
    '00000000',
    '00000000',
    '00001100',
    '00011100',
    '00111100',
    '01101100',
    '11001100',
    '11111110',
    '00001100',
    '00001100',
    '00001100',
    '00011110',
    '00000000',
    '00000000',
    '00000000'
  ],
  '5': [
    '00000000',
    '00000000',
    '00000000',
    '11111110',
    '11000000',
    '11000000',
    '11000000',
    '11111100',
    '00000110',
    '00000110',
    '00000110',
    '00000110',
    '11111100',
    '00000000',
    '00000000',
    '00000000'
  ],
  '6': [
    '00000000',
    '00000000',
    '00000000',
    '00111000',
    '01100000',
    '11000000',
    '11000000',
    '11111100',
    '11000110',
    '11000110',
    '11000110',
    '11000110',
    '01111100',
    '00000000',
    '00000000',
    '00000000'
  ],
  '7': [
    '00000000',
    '00000000',
    '00000000',
    '11111110',
    '11000110',
    '00000110',
    '00000110',
    '00001100',
    '00011000',
    '00110000',
    '00110000',
    '00110000',
    '00110000',
    '00000000',
    '00000000',
    '00000000'
  ],
  '8': [
    '00000000',
    '00000000',
    '00000000',
    '01111100',
    '11000110',
    '11000110',
    '11000110',
    '01111100',
    '11000110',
    '11000110',
    '11000110',
    '11000110',
    '01111100',
    '00000000',
    '00000000',
    '00000000'
  ],
  '9': [
    '00000000',
    '00000000',
    '00000000',
    '01111100',
    '11000110',
    '11000110',
    '11000110',
    '01111110',
    '00000110',
    '00000110',
    '00000110',
    '00001100',
    '01111000',
    '00000000',
    '00000000',
    '00000000'
  ],
  '0': [
    '00000000',
    '00000000',
    '00000000',
    '00111100',
    '01100110',
    '11000011',
    '11011011',
    '11011011',
    '11000011',
    '11000011',
    '01100110',
    '00111100',
    '00000000',
    '00000000',
    '00000000',
    '00000000'
  ],
  '!' : [
    '00000000',
    '00000000',
    '00000000',
    '00011000',
    '00111100',
    '00111100',
    '00111100',
    '00011000',
    '00011000',
    '00011000',
    '00000000',
    '00011000',
    '00011000',
    '00000000',
    '00000000',
    '00000000'
  ],
  '?' : [
    '00000000',
    '00000000',
    '00000000',
    '01111100',
    '11000110',
    '11000110',
    '00001100',
    '00011000',
    '00011000',
    '00011000',
    '00000000',
    '00011000',
    '00011000',
    '00000000',
    '00000000',
    '00000000'
  ],
  '#' : [
    '00000000',
    '00000000',
    '00000000',
    '00000000',
    '01101100',
    '01101100',
    '11111110',
    '01101100',
    '01101100',
    '01101100',
    '11111110',
    '01101100',
    '01101100',
    '00000000',
    '00000000',
    '00000000'
  ],
  '$' : [
     '00000000',
    '00011000',
    '00011000',
    '01111100',
    '11000110',
    '11000010',
    '11000000',
    '01111100',
    '00000110',
    '00000110',
    '10000110',
    '11000110',
    '01111100',
    '00011000',
    '00011000',
    '00000000'
  ],
  '%' : [
    '00000000',
    '00000000',
    '00000000',
    '00000000',
    '00000000',
    '11000010',
    '11000110',
    '00001100',
    '00011000',
    '00110000',
    '01100000',
    '11000110',
    '10000110',
    '00000000',
    '00000000',
    '00000000'
  ],
  '&' : [
     '00000000',
    '00000000',
    '00000000',
    '00111000',
    '01101100',
    '01101100',
    '00111000',
    '01110110',
    '11011100',
    '11001100',
    '11001100',
    '11001100',
    '01110110',
    '00000000',
    '00000000',
    '00000000'
  ],
  '-': [
    '00000000',
    '00000000',
    '00000000',
    '00000000',
    '00000000',
    '00000000',
    '00000000',
    '00000000',
    '11111110',
    '00000000',
    '00000000',
    '00000000',
    '00000000',
    '00000000',
    '00000000',
    '00000000',
  ] , 
  ',': [
    '00000000',
    '00000000',
    '00000000',
    '00000000',
    '00000000',
    '00000000',
    '00000000',
    '00000000',
    '00000000',
    '00000000',
    '00011000',
    '00011000',
    '00011000',
    '00110000',
    '00000000',
    '00000000',
  ],




  'A' : [
    '00000000',
    '00000000',
    '00000000',
    '00010000',
    '00111000',
    '01101100',
    '11000110',
    '11000110',
    '11111110',
    '11000110',
    '11000110',
    '11000110',
    '11000110',
    '00000000',
    '00000000',
    '00000000'
  ],
  'B' : [
    '00000000',
    '00000000',
    '00000000',
    '11111100',
    '01100110',
    '01100110',
    '01100110',
    '01111100',
    '01100110',
    '01100110',
    '01100110',
    '01100110',
    '11111100',
    '00000000',
    '00000000',
    '00000000'
  ],
  'C' : [
    '00000000',
    '00000000',
    '00000000',
    '00111100',
    '01100110',
    '11000010',
    '11000000',
    '11000000',
    '11000000',
    '11000000',
    '11000010',
    '01100110',
    '00111100',
    '00000000',
    '00000000',
    '00000000'
  ],
  'D' : [
    '00000000',
    '00000000',
    '00000000',
    '11111000',
    '01101100',
    '01100110',
    '01100110',
    '01100110',
    '01100110',
    '01100110',
    '01100110',
    '01101100',
    '11111000',
    '00000000',
    '00000000',
    '00000000'
  ],
  'E' : [
    '00000000',
    '00000000',
    '00000000',
    '11111110',
    '01100110',
    '01100010',
    '01101000',
    '01111000',
    '01101000',
    '01100000',
    '01100010',
    '01100110',
    '11111110',
    '00000000',
    '00000000',
    '00000000'
  ],
  'F' : [
    '00000000',
    '00000000',
    '00000000',
    '11111110',
    '01100110',
    '01100010',
    '01101000',
    '01111000',
    '01101000',
    '01100000',
    '01100000',
    '01100000',
    '11110000',
    '00000000',
    '00000000',
    '00000000'
  ],
  'G' : [
    '00000000',
    '00000000',
    '00000000',
    '00111100',
    '01100110',
    '11000010',
    '11000000',
    '11000000',
    '11011110',
    '11000110',
    '11000110',
    '01100110',
    '00111010',
    '00000000',
    '00000000',
    '00000000'
  ],
  'H' : [
    '00000000',
    '00000000',
    '00000000',
    '11000110',
    '11000110',
    '11000110',
    '11000110',
    '11111110',
    '11000110',
    '11000110',
    '11000110',
    '11000110',
    '11000110',
    '00000000',
    '00000000',
    '00000000'
  ],
  'I' : [
    '00000000',
    '00000000',
    '00000000',
    '00111100',
    '00011000',
    '00011000',
    '00011000',
    '00011000',
    '00011000',
    '00011000',
    '00011000',
    '00011000',
    '00111100',
    '00000000',
    '00000000',
    '00000000'
  ],
  'J' : [
    '00000000',
    '00000000',
    '00000000',
    '00111100',
    '00001100',
    '00001100',
    '00001100',
    '00001100',
    '00001100',
    '11001100',
    '11001100',
    '11001100',
    '01111000',
    '00000000',
    '00000000',
    '00000000'
  ],
  'K' : [
    '00000000',
    '00000000',
    '00000000',
    '11100110',
    '01100110',
    '01100110',
    '01101100',
    '01111000',
    '01111000',
    '01111000',
    '01100110',
    '01100110',
    '11100110',
    '00000000',
    '00000000',
    '00000000'
  ],
  'L' : [
    '00000000',
    '00000000',
    '00000000',
    '11110000',
    '01100000',
    '01100000',
    '01100000',
    '01100000',
    '01100000',
    '01100000',
    '01100010',
    '01100110',
    '11111110',
    '00000000',
    '00000000',
    '00000000'
  ],
  'M' : [
    '00000000',
    '00000000',
    '00000000',
    '11000011',
    '11100111',    
    '11111111',
    '11111111',
    '11011011',
    '11000011',
    '11000011',
    '11000011',
    '11000011',
    '11000011',
    '00000000',
    '00000000',
    '00000000'
  ],
  'N' : [
    '00000000',
    '00000000',
    '00000000',
    '11000110',
    '11100110',
    '11110110',
    '11111110',
    '11011110',
    '11001110',
    '11000110',
    '11000110',
    '11000110',
    '11000110',
    '00000000',
    '00000000',
    '00000000'
  ],
  'O' : [
    '00000000',
    '00000000',
    '00000000',
    '01111100',
    '11000110',
    '11000110',
    '11000110',
    '11000110',
    '11000110',
    '11000110',
    '11000110',
    '11000110',
    '01111100',
    '00000000',
    '00000000',
    '00000000'
  ],
  'p' : [
    '00000000',
    '00000000',
    '00000000',
    '11111100',
    '01100110',
    '01100110',
    '01100110',
    '01111100',
    '01100000',
    '01100000',
    '01100000',
    '01100000',
    '11110000',
    '00000000',
    '00000000',
    '00000000'
  ],
  'Q' : [
    '00000000',
    '00000000',
    '00000000',
    '01111100',
    '11000110',
    '11000110',
    '11000110',
    '11000110',
    '11000110',
    '11000110',
    '11010110',
    '11011110',
    '01111100',
    '00001100',
    '00001110',
    '00000000'
  ],
  'R' : [
    '00000000',
    '00000000',
    '00000000',
    '11111100',
    '01100110',
    '01100110',
    '01100110',
    '01111100',
    '01101100',
    '01100110',
    '01100110',
    '01100110',
    '11100110',
    '00000000',
    '00000000',
    '00000000'
  ],
  'S' : [
    '00000000',
    '00000000',
    '00000000',
    '01111100',
    '11000110',
    '11000110',
    '01100000',
    '00111000',
    '00001100',
    '00000110',
    '11000110',
    '11000110',
    '01111100',
    '00000000',
    '00000000',
    '00000000'
  ],
  'T' : [
    '00000000',
    '00000000',
    '00000000',
    '11111111',
    '11011011',
    '10011001',
    '00011000',
    '00011000',
    '00011000',
    '00011000',
    '00011000',
    '00011000',
    '00111100',
    '00000000',
    '00000000',
    '00000000'
  ],

'U' : [
    '00000000',
    '00000000',
    '00000000',
    '01100110',
    '01100110',
    '01100110',
    '01100110',
    '01100110',
    '01100110',
    '01100110',
    '01100110',
    '01100110',
    '00111110',
    '00000000',
    '00000000',
    '00000000'
  ],

'V' : [
    '00000000',
    '00000000',
    '00000000',
    '11000011',
    '11000011',
    '11000011',
    '11000011',
    '11000011',
    '11000011',
    '11000011',
    '01100110',
    '00111100',
    '00011000',
    '00000000',
    '00000000',
    '00000000'
  ],

'W' : [
    '00000000',
    '00000000',
    '00000000',
    '11000011',
    '11000011',
    '11000011',
    '11000011',
    '11000011',
    '11011011',
    '11011011',
    '11111111',
    '01100110',
    '01100110',
    '00000000',
    '00000000',
    '00000000'
  ],

'X' : [
    '00000000',
    '00000000',
    '00000000',
    '11000011',
    '11000011',
    '01100110',
    '00111100',
    '00011000',
    '00011000',
    '00111100',
    '01100110',
    '11000011',
    '11000011',
    '00000000',
    '00000000',
    '00000000'
  ],

'Y' : [
    '00000000',
    '00000000',
    '00000000',
    '11000011',
    '11000011',
    '11000011',
    '01100110',
    '00111100',
    '00011000',
    '00011000',
    '00011000',
    '00011000',
    '00111100',
    '00000000',
    '00000000',
    '00000000'
  ],

'Z' : [
    '00000000',
    '00000000',
    '00000000',
    '11111111',
    '11000011',
    '10000110',
    '00001100',
    '00011000',
    '00110000',
    '01100000',
    '11000001',
    '11000011',
    '11111111',
    '00000000',
    '00000000',
    '00000000'
  ],
}

CHAR_MATRICES = {
  '1': [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0001100000000000',
    '0011100000000000',
    '0111100000000000',
    '0001100000000000',
    '0001100000000000',
    '0001100000000000',
    '0001100000000000',
    '0001100000000000',
    '0001100000000000',
    '0111111000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  '2': [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0111110000000000',
    '1100011000000000',
    '0000011000000000',
    '0000110000000000',
    '0001100000000000',
    '0011000000000000',
    '0110000000000000',
    '1100000000000000',
    '1100011000000000',
    '1111111000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  '3': [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0111110000000000',
    '1100011000000000',
    '0000011000000000',
    '0000011000000000',
    '0011110000000000',
    '0000011000000000',
    '0000011000000000',
    '0000011000000000',
    '1100011000000000',
    '0111110000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  '4': [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000110000000000',
    '0001110000000000',
    '0011110000000000',
    '0110110000000000',
    '1100110000000000',
    '1111111000000000',
    '0000110000000000',
    '0000110000000000',
    '0000110000000000',
    '0001111000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  '5': [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1111111000000000',
    '1100000000000000',
    '1100000000000000',
    '1100000000000000',
    '1111110000000000',
    '0000011000000000',
    '0000011000000000',
    '0000011000000000',
    '0000011000000000',
    '1111110000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  '6': [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0011100000000000',
    '0110000000000000',
    '1100000000000000',
    '1100000000000000',
    '1111110000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '0111110000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  '7': [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1111111000000000',
    '1100011000000000',
    '0000011000000000',
    '0000011000000000',
    '0000110000000000',
    '0001100000000000',
    '0011000000000000',
    '0011000000000000',
    '0011000000000000',
    '0011000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  '8': [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0111110000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '0111110000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '0111110000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  '9': [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0111110000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '0111111000000000',
    '0000011000000000',
    '0000011000000000',
    '0000011000000000',
    '0000110000000000',
    '0111100000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  '0': [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0011110000000000',
    '0110011000000000',
    '1100001100000000',
    '1101101100000000',
    '1101101100000000',
    '1100001100000000',
    '1100001100000000',
    '0110011000000000',
    '0011110000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  '!' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0001100000000000',
    '0011110000000000',
    '0011110000000000',
    '0011110000000000',
    '0001100000000000',
    '0001100000000000',
    '0001100000000000',
    '0000000000000000',
    '0001100000000000',
    '0001100000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  '?' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0111110000000000',
    '1100011000000000',
    '1100011000000000',
    '0000110000000000',
    '0001100000000000',
    '0001100000000000',
    '0001100000000000',
    '0000000000000000',
    '0001100000000000',
    '0001100000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  '#' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0110110000000000',
    '0110110000000000',
    '1111111000000000',
    '0110110000000000',
    '0110110000000000',
    '0110110000000000',
    '1111111000000000',
    '0110110000000000',
    '0110110000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  '$' : [
     '0000000000000000',
    '0001100000000000',
    '0001100000000000',
    '0111110000000000',
    '1100011000000000',
    '1100001000000000',
    '1100000000000000',
    '0111110000000000',
    '0000011000000000',
    '0000011000000000',
    '1000011000000000',
    '1100011000000000',
    '0111110000000000',
    '0001100000000000',
    '0001100000000000',
    '0000000000000000'
  ],
  '%' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1100001000000000',
    '1100011000000000',
    '0000110000000000',
    '0001100000000000',
    '0011000000000000',
    '0110000000000000',
    '1100011000000000',
    '1000011000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  '&' : [
     '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0011100000000000',
    '0110110000000000',
    '0110110000000000',
    '0011100000000000',
    '0111011000000000',
    '1101110000000000',
    '1100110000000000',
    '1100110000000000',
    '1100110000000000',
    '0111011000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  '-': [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0011110000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
  ] , 
  ',': [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0001100000000000',
    '0001100000000000',
    '0001100000000000',
    '0011000000000000',
    '0000000000000000',
    '0000000000000000',
  ],




  'A' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0001000000000000',
    '0011100000000000',
    '0110110000000000',
    '1100011000000000',
    '1100011000000000',
    '1111111000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  'B' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1111110000000000',
    '0110011000000000',
    '0110011000000000',
    '0110011000000000',
    '0111110000000000',
    '0110011000000000',
    '0110011000000000',
    '0110011000000000',
    '0110011000000000',
    '1111110000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  'C' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0011110000000000',
    '0110011000000000',
    '1100001000000000',
    '1100000000000000',
    '1100000000000000',
    '1100000000000000',
    '1100000000000000',
    '1100001000000000',
    '0110011000000000',
    '0011110000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  'D' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1111100000000000',
    '0110110000000000',
    '0110011000000000',
    '0110011000000000',
    '0110011000000000',
    '0110011000000000',
    '0110011000000000',
    '0110011000000000',
    '0110110000000000',
    '1111100000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  'E' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1111111000000000',
    '0110011000000000',
    '0110001000000000',
    '0110100000000000',
    '0111100000000000',
    '0110100000000000',
    '0110000000000000',
    '0110001000000000',
    '0110011000000000',
    '1111111000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  'F' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1111111000000000',
    '0110011000000000',
    '0110001000000000',
    '0110100000000000',
    '0111100000000000',
    '0110100000000000',
    '0110000000000000',
    '0110000000000000',
    '0110000000000000',
    '1111000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  'G' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0011110000000000',
    '0110011000000000',
    '1100001000000000',
    '1100000000000000',
    '1100000000000000',
    '1101111000000000',
    '1100011000000000',
    '1100011000000000',
    '0110011000000000',
    '0011101000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  'H' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '1111111000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  'I' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0011110000000000',
    '0001100000000000',
    '0001100000000000',
    '0001100000000000',
    '0001100000000000',
    '0001100000000000',
    '0001100000000000',
    '0001100000000000',
    '0001100000000000',
    '0011110000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  'J' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0011110000000000',
    '0000110000000000',
    '0000110000000000',
    '0000110000000000',
    '0000110000000000',
    '0000110000000000',
    '1100110000000000',
    '1100110000000000',
    '1100110000000000',
    '0111100000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  'K' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1110011000000000',
    '0110011000000000',
    '0110011000000000',
    '0110110000000000',
    '0111100000000000',
    '0111100000000000',
    '0111100000000000',
    '0110011000000000',
    '0110011000000000',
    '1110011000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  'L' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1111000000000000',
    '0110000000000000',
    '0110000000000000',
    '0110000000000000',
    '0110000000000000',
    '0110000000000000',
    '0110000000000000',
    '0110001000000000',
    '0110011000000000',
    '1111111000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  'M' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1100001100000000',
    '1110011100000000',    
    '1111111100000000',
    '1111111100000000',
    '1101101100000000',
    '1100001100000000',
    '1100001100000000',
    '1100001100000000',
    '1100001100000000',
    '1100001100000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  'N' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1100011000000000',
    '1110011000000000',
    '1111011000000000',
    '1111111000000000',
    '1101111000000000',
    '1100111000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  'O' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0111110000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '0111110000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  'P' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1111110000000000',
    '0110011000000000',
    '0110011000000000',
    '0110011000000000',
    '0111110000000000',
    '0110000000000000',
    '0110000000000000',
    '0110000000000000',
    '0110000000000000',
    '1111000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  'Q' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0111110000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '1100011000000000',
    '1101011000000000',
    '1101111000000000',
    '0111110000000000',
    '0000110000000000',
    '0000111000000000',
    '0000000000000000'
  ],
  'R' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1111110000000000',
    '0110011000000000',
    '0110011000000000',
    '0110011000000000',
    '0111110000000000',
    '0110110000000000',
    '0110011000000000',
    '0110011000000000',
    '0110011000000000',
    '1110011000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  'S' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0111110000000000',
    '1100011000000000',
    '1100011000000000',
    '0110000000000000',
    '0011100000000000',
    '0000110000000000',
    '0000011000000000',
    '1100011000000000',
    '1100011000000000',
    '0111110000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],
  'T' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1111111100000000',
    '1101101100000000',
    '1001100100000000',
    '0001100000000000',
    '0001100000000000',
    '0001100000000000',
    '0001100000000000',
    '0001100000000000',
    '0001100000000000',
    '0011110000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],

'U' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0110011000000000',
    '0110011000000000',
    '0110011000000000',
    '0110011000000000',
    '0110011000000000',
    '0110011000000000',
    '0110011000000000',
    '0110011000000000',
    '0110011000000000',
    '0011111000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],

'V' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1100001100000000',
    '1100001100000000',
    '1100001100000000',
    '1100001100000000',
    '1100001100000000',
    '1100001100000000',
    '1100001100000000',
    '0110011000000000',
    '0011110000000000',
    '0001100000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],

'W' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1100001100000000',
    '1100001100000000',
    '1100001100000000',
    '1100001100000000',
    '1100001100000000',
    '1101101100000000',
    '1101101100000000',
    '1111111100000000',
    '0110011000000000',
    '0110011000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],

'X' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1100001100000000',
    '1100001100000000',
    '0110011000000000',
    '0011110000000000',
    '0001100000000000',
    '0001100000000000',
    '0011110000000000',
    '0110011000000000',
    '1100001100000000',
    '1100001100000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],

'Y' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1100001100000000',
    '1100001100000000',
    '1100001100000000',
    '0110011000000000',
    '0011110000000000',
    '0001100000000000',
    '0001100000000000',
    '0001100000000000',
    '0001100000000000',
    '0011110000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],

'Z' : [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1111111100000000',
    '1100001100000000',
    '1000011000000000',
    '0000110000000000',
    '0001100000000000',
    '0011000000000000',
    '0110000000000000',
    '1100000100000000',
    '1100001100000000',
    '1111111100000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000'
  ],

}


DEFAULT = "WELCOME TO THE INDIAN RAILWAYS"
MOVING_LOOP_COUNT = 2


class LEDBoard:
    def __init__(self):
        self.default_message_byte_list = None
        self.fix_coach = False
        self.ser = serial_connection
        self.occupy = False
        self.time_delay_col = TIME_DELAY
        self.time_delay = 1/self.time_delay_col

    def set_data(self, data):
        self.data = data

    # Exclude 'ser' attribute from being pickled
    def __getstate__(self):
        state = self.__dict__.copy()
        ## print("state before pickling")
        ## print(state)
        if 'ser' in state:
            del state['ser']
        ## print(state)
        return state

    def __setstate__(self, state):
        self.__dict__.update(state)
        ## print("state after pickling")
        ## print(state)
        self.ser = serial_connection

    # Method to convert given binary to the hexadecimal code.
    def binToHexa(self, n):
        bnum = int(n)
        temp = 0
        mul = 1
        
        # counter to check group of 4
        count = 1
        
        # char array to store hexadecimal number
        hexaDeciNum = ['0'] * 100
        
        # counter for hexadecimal number array
        i = 0
        while bnum != 0:
            rem = bnum % 10
            temp = temp + (rem*mul)
            
            # check if group of 4 completed
            if count % 4 == 0:
            
                # check if temp < 10
                if temp < 10:
                    hexaDeciNum[i] = chr(temp+48)
                else:
                    hexaDeciNum[i] = chr(temp+55)
                mul = 1
                temp = 0
                count = 1
                i = i+1
                
            # group of 4 is not completed
            else:
                mul = mul*2
                count = count+1
            bnum = int(bnum/10)
            
        # check if at end the group of 4 is not
        # completed
        if count != 1:
            hexaDeciNum[i] = chr(temp+48)
            
        # check at end the group of 4 is completed
        if count == 1:
            i = i-1
            
        # ## printing hexadecimal number
        # array in reverse order
        # ## print("\n Hexadecimal equivalent of {}: ".format(n), end="")
        hex_str = ''
        while i >= 0:
            hex_str += hexaDeciNum[i] 
            # ## print(end=hexaDeciNum[i])
            i = i-1
        return hex_str if hex_str else '0'

    def binFormat(self, n):
        if int(n) == 0:
            return ''
        num_len = len(n)
        
        if num_len > 16:
            return ''
        elif num_len != 16:
            spaces = '0'*(16-num_len)
            new_n = spaces+n
        else:
            new_n = n
        ## print('new_n')
        ## print(new_n)
        bin_l =['','','','']
        # bin_l[1] = new_n[0:4]
        # bin_l[0] = new_n[4:8]
        # bin_l[2] = new_n[12:] #lsb to msb
        # bin_l[3] = new_n[8:12] #lsb to msb
        bin_l[3] = new_n[0:4]
        bin_l[2] = new_n[4:8]
        bin_l[0] = new_n[12:] #lsb to msb
        bin_l[1] = new_n[8:12] #lsb to msb
        ## print(bin_l)
        hex_list = []
        for l in bin_l:
            hex_list.append(self.binToHexa(l[::-1])) #lsb to msb
        hex_str = "".join(hex_list)
        ## print('hex_list')
        ## print(hex_list)
        ## print('hex_str')
        ## print(hex_str)
        ## print(hex_str[0:2]+" "+hex_str[2:])
        return hex_str[0:2]+" "+hex_str[2:]

    def generate(self, bin_list):
        # formating data, taking columns data top to bottom
        # ## print(len(bin_list))
        formated_list = ['']*len(bin_list)
        for l in bin_list:
            count = 0
            for i in l:
                formated_list[count] += i
                count+=1

        # ## print(formated_list)

        # reversing formated_list, which reverse every element from list, 
        # means reading matrix column from bottom to top
        rev_for = []
        for r in formated_list:
            rev_for.append(r[::-1])

        # Generating hexadecimal representation for each element of rev_list.
        hex_list = []
        for i in rev_for:
            hex_l = self.binFormat(i)
            if hex_l:
                hex_list.append(hex_l)
            # if hex_l == "00 ":
            #     hex_list.append("00 00")
            # else:
            #     hex_list.append(hex_l)
            # if hex_l != "00 ":
            #     # hex_list.append(hex_l)
            #     hex_list.append(self.add_zero(hex_l))

        # ## print(hex_list)

        # byte_list = []
        # Convert each element in the list to bytes
        # for hex_str in hex_list:
        #     byte_list.append(b''.join(self.hex_string_to_bytes(hex_str)))
        # byte_data = b''.join(self.hex_string_to_bytes(hex_str) for hex_str in hex_list)
        byte_list = [bytes.fromhex(item.replace(' ', '')) for item in hex_list]

        ## print('byte_list')
        ## print(byte_list)
        # returning byte data
        return byte_list

    def add_zero(self, s):
        ss =s.split(" ")
        if len(ss[1])>1:
            return s
        else:
            return ss[0]+" 0"+ss[1]

    def hex_string_to_bytes(self, hex_string):
        hex_values = hex_string.split()
        byte_values = [int(value, 16) for value in hex_values]
        return bytes(byte_values)

    def run(self, data, run_default=False, store_default=False):
        if self.default_message_byte_list is not None and run_default:
            byte_list = self.default_message_byte_list
        else:
            byte_list = []
            for i in data:
                # ## print(i)
                time.sleep(self.time_delay)
                if(i == ' '):
                    byte_list.append(b'\x00\x00')
                    byte_list.append(b'\x00\x00')
                else:
                    byte_list.extend(self.generate(CHAR_MATRICES[i]))
                    byte_list.append(b'\x00\x00')
            # Storing default running text generated byte list
            if store_default and run_default:
                clear = [b'\x00\x00']*128
                byte_list.extend(clear)
                self.default_message_byte_list = byte_list
            # ## print('final')
            # ## print(byte_list)
        for i in byte_list:
            self.send_data(i)
            time.sleep(self.time_delay)

    def clear(self, no_of_times):
        for t in range(no_of_times):
            self.send_data(b'\x00\x00')
            time.sleep(self.time_delay)

    def default(self):
        self.occupy = True
        if self.default_message_byte_list is None:
          self.send_strt()
          self.send_fix_data('')
          self.send_end()
          self.run(DEFAULT, True, True)
        else:
          self.run(DEFAULT, True)
        self.occupy = False

    def send_data(self, data):
        try:
            self.ser.write(data)
            # ## print(f"Data sent: {data}")

        except Exception as e:
            print(f"Error: {e}")
    
    def close_ser(self):
        self.ser.close()

    def fix_side(self, data):
        self.send_strt()
        self.send_fix_data(data)

    def send_strt(self):
        message = "STRT"
        ascii_values = [ord(char) for char in message]
        # ## print(ascii_values)
        # Send each ASCII value over the serial connection
        for ascii_val in ascii_values:
            # ## print(ascii_val)
            self.ser.write(bytes([ascii_val]))

    def send_fix_data(self, g_data):
        # self.send_data(b'\x18\x3C\x7E\xE7\xC3\xC3\xC3\xC3\xFF\xFF\xC3\xC3\xC3\xC3\xC3\xC3\x18\x3C\x7E\xE7\xC3\xC3\xC3\xC3\xFF\xFF\xC3\xC3\xC3\xC3\xC3\xC3\x18\x3C\x7E\xE7\xC3\xC3\xC3\xC3\xFF\xFF\xC3\xC3\xC3\xC3\xC3\xC3\x01\x01\x01\x01')
        data = str(g_data)
        data_len = len(data)
        byte_data = []
        hex_list = []
        for character in data:
            char_matrix = CHAR_MATRICES[character]
            for i in range(len(char_matrix)):
                bin_n = int(char_matrix[i][0:8])
                if bin_n == 0:
                    hex_list.append('00')
                else:
                    hex_list.append(self.binToHexa(char_matrix[i][0:8]))
        # 4 dummy bytes to clear buffer
        hex_list.extend(['01','01','01','01'])
        ## print(hex_list)
        hex_list_new = []
        for x in hex_list:
            if len(x) == 1:
                hex_list_new.append("0"+x)
            else:
                hex_list_new.append(x)
        ## print('new hex list', hex_list_new)
        # Convert hex strings to bytes
        output_bytes = bytes.fromhex(''.join(hex_list_new))
        ## print(output_bytes)
        # Convert each hexadecimal string to byte and join them
        # output_bytes = bytes([int(x, 16) for x in input_list])
        self.send_data(output_bytes)
        # byte_list = [bytes.fromhex(item.replace(' ', '')) for item in hex_list]

        # ## print('byte_list')
        # ## print(byte_list)
        # for i in range(len(byte_data)):
        #     self.send_data(output_bytes)
        #     time.sleep(self.time_delay)

        byte_value_for_end = (data_len).to_bytes(1, byteorder='big')

        self.send_col_data(byte_value_for_end)

    def send_fix_data_old(self):
        byte_list = [
            b'\xff\xff\xff', b'\x00\x00', b'\x00\x00', b'\x00\x00', b'\x00\x00',
            b'\x00\x00', b'\x00\x00', b'\x00\x00', b'\x00\x00', b'\x00\x00',
            b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01',
            b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01',
            b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01',
            b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01',
            b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01',
            b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01',
            b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01',
            b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01',
        ]

        byte_data = b'\x01\x08\x00\x01\x08\x00\x03\x0C\x00\x03\x0C\x00\x07\x0E\x00\x07\x0E\x00\x0E\x07\x00\x0E\x07\x00\x0C\x03\x00\x0C\x03\x00\x0C\x03\x00\x0C\x03\x00\x0C\x03\x00\x0C\x03\x00\x0C\x03\x00\x0C\x03\x00\x0F\x0F\x00\x0F\x0F\x00\x0F\x0F\x00\x0F\x0F\x00\x0C\x03\x00\x0C\x03\x00\x0C\x03\x00\x0C\x03\x00\x0C\x03\x00\x0C\x03\x00\x0C\x03\x00\x0C\x03\x00\x0C\x03\x00\x0C\x03\x00\x0C\x03\x00\x0C\x03\x00'
        byte_data = [b'\x00\x00', b'\x00\x7c', b'\x00\x7e', b'\x00\x13', b'\x00\x13', b'\x00\x7e', b'\x00\x7c', b'\x00\x00']
        byte_data = [b'\x00\x00', b'\x7c\x00', b'\x7e\x00', b'\x13\x00', b'\x13\x00', b'\x7e\x00', b'\x7c\x00', b'\x00\x00']
        # lst to msb
        byte_data = [b'\x00\x00', b'\x3e\x00', b'\x7e\x00', b'\xc8\x00', b'\xc8\x00', b'\x7e\x00', b'\x3e\x00', b'\x00\x00']
        byte_data = [b'\x00\x00', b'\x00\x3e', b'\x00\x7e', b'\x00\xc8', b'\x00\xc8', b'\x00\x7e', b'\x00\x3e', b'\x00\x00']
        # byte_data = [b'\x00\x00', b'\x00|', b'\x00~', b'\x00\x13', b'\x00\x13', b'\x00~', b'\x00|', b'\x00\x00']
        # self.send_data(b'\x00')
        byte_data = [b'\x00\x00', b'\xff\x1f', b'\xff\x3f', b'\xc0\x70', b'\xc0\xe0', b'\xc0\xe0', b'\xc0\x70', b'\xff\x3f', b'\xff\x1f', b'\x00\x00']
        byte_data = [b'\x00\x00', b'\x1f\xff', b'\x3f\xff', b'\x70\xc0', b'\xe0\xc0', b'\xe0\xc0', b'\x70\xc0', b'\x3f\xff', b'\x1f\xff', b'\x00\x00']
        # byte_data = [b'\x18', b'\x3c', b'\x7e', b'\xe7', b'\xc3', b'\xc3', b'\xc3', b'\xc3', b'\xff', b'\xff', b'\xc3', b'\xc3', b'\xc3', b'\xc3', b'\xc3', b'\xc3', b'\x01', b'\x01', b'\x01', b'\x01']
        
        # for middle 8
        # byte_data = [b'\x00\x00', b'\xe0\x03', b'\xe0\x07', b'\x80\x0c', b'\x80\x0c', b'\xe0\x07', b'\xe0\x03', b'\x00\x00']
        
        for i in range(len(byte_data)):
            self.send_data(byte_data[i])
            time.sleep(self.time_delay)

    def send_col_data(self, byte_data):
        self.ser.write(byte_data)
        # message = "03"
        # ascii_values = [ord(char) for char in message]

        # # Send each ASCII value over the serial connection
        # for ascii_val in ascii_values:
        #     self.ser.write(bytes([ascii_val]))

    def send_end(self):
        message = "END"
        ascii_values = [ord(char) for char in message]

        # Send each ASCII value over the serial connection
        for ascii_val in ascii_values:
            self.ser.write(bytes([ascii_val]))

    def test(self):
        byte_list = [
            b'\x00\x01', b'\x00\x00', b'\x00\x00', b'\x00\x00', b'\x00\x00',
            b'\x00\x00', b'\x00\x00', b'\x00\x00', b'\x00\x00', b'\x00\x00',
            b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01',
            b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01',
            b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01',
            b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01',
            b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01',
            b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01',
            b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01',
            b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01', b'\x00\x01',
        ]
        for i in range(50):
            time.sleep(self.time_delay)
            self.send_data(byte_list[i])

    def test_16x16(self):
        str = " A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
        byte_list = []
        for i in str:
            if(i == ' '):
                byte_list.append(b'\x00\x00\x00\x00')
            else: 
                byte_list.extend(self.generate(CHAR_MATRICES[i]))
                byte_list.append(b'\x00\x00')
        ## print(byte_list)
        # return 
        if byte_list:
            byte_len = len(byte_list)
            for i in range(byte_len):
                self.send_data(byte_list[i])
                time.sleep(self.time_delay)

    def send_fix(self):
        ''' Method to handle fix data sending to the board, if self.fix_coach is true then it sends train_no else it send coach_no
         every time when this method is called it will detect what previously send and send other one. what previously send is 
          detected by the flag fix_coach '''
        self.fix_data = self.data['fix_part']['train_no'] if self.fix_coach else self.data['fix_part']['coach_no']
        self.send_strt()
        self.send_fix_data(self.fix_data)
        self.send_end()
        self.fix_coach = not self.fix_coach

    def send_moving(self):
        for i in range(MOVING_LOOP_COUNT):
            self.run(self.data['moving_part']['train_from_to'])
            self.clear(128-len(str(self.fix_data)))
        self.send_fix()
        for i in range(MOVING_LOOP_COUNT):
            self.run(self.data['moving_part']['train_name'])
            self.clear(128-len(str(self.fix_data)))
        self.send_fix()
        for i in range(MOVING_LOOP_COUNT):
            self.run(self.data['moving_part']['train_via'])
            self.clear(128-len(str(self.fix_data)))

    def start(self):
        self.occupy = True
        self.send_fix()
        self.send_moving()
        self.occupy = False

if __name__ == "__main__":
    pass
def run():
    data = {
        'fix_part' : {
            'coach_no': 'S-5',  # 'A-11'
            'train_no': '22161'   # '12003'
        },
        'moving_part': {
            'train_from_to': 'BHOPAL TO DAMOH',
            'train_name': 'RAJAYA RANI EXPRESS',
            'train_via': 'VIA SAGAR, BINA'
        }
    }
    board = None
    try:
        board = LEDBoard(data)
        while True:
          board.start()
        # board.run()
        # board.clear(10)
        # board.default()
        # board.clear(10)
        # board.close_ser()
        # board.send_strt()
        # while True:
        # board.fix_side("AIAI")
        #     board.clear(10)
        # board.send_col_data()
        # board.send_end()
        # board.send_run_data()
        # while True:
        #     board.test_16x16()

        # while True:
        #     board.default()

        # choice = int(input())
        # board.close_ser()
    except KeyboardInterrupt:
        print("\nKeyboard interrupt detected. Exiting gracefully...")

    # except Exception as e:
    #     ## print(e)

    finally:
        if board is not None:
            board.close_ser()